on:
  push:
    branches:
      - 'leet-build*'

jobs:
  build:
    name: Building Binaries
    strategy:
      matrix:
        platform: [windows-latest]
#        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
    - name: Checkout source code
      uses: actions/checkout@v2
    - name: Setup Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
#        toolchain: stable
        toolchain: nightly-2020-06-10
        components: rustfmt
#        target: ${{ matrix.target }}
        override: true
    # Install OS specific dependencies
    - name: Install Linux dependencies
      if: matrix.platform == 'ubuntu-latest'
      run: sudo apt-get install re2c
    - name: Install macOS dependencies
      if: matrix.platform == 'macOS-latest'
      run: brew install re2c p7zip cmake
    - name: Install Windows dependencies
      if: matrix.platform == 'windows-latest'
      run: choco install llvm sqlite tor
    - name: Build binaries
      uses: actions-rs/cargo@v1
      env:
        CC: gcc
      with:
#        use-cross: true
        command: build
#        args: --release --target=${{ matrix.target }}
        args: --release --verbose
    - shell: bash
      continue-on-error: true  # WARNING: only for this example, remove it!
      run: |
        ls -la '${{ github.workspace }}'
        ls -la '${{ github.workspace }}/target/release/'
#        ls -la "${{ github.workspace }}/target/release/"{tari_base_node,tari_base_node.exe}
    - name: Upload Windows binary
      if: matrix.platform == 'windows-latest'
      uses: actions/upload-artifact@v2
      with:
        name: tari_base_node - release - ${{ matrix.platform }}
        path: '${{ github.workspace }}/target/release/tari_base_node.exe'
    - name: Upload Nix binary
      if: matrix.platform != 'windows-latest'
      uses: actions/upload-artifact@v2
      with:
        name: tari_base_node - release - ${{ matrix.platform }}
        path: '${{ github.workspace }}/target/release/cross-compile-sample'
